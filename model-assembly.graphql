type ConfiguratorAssembly {
  id: ID!

  item: ConfiguratorAssemblyItem
}
type ConfiguratorAssemblyItem {
  id: ID!
  code: String
  name: String
  definitionId: ID!
  slots: [ConfiguratorAssemblySlot!]!
  attributes: [ConfiguratorAssemblyAttribute!]!
}
type ConfiguratorAssemblyAttribute {
  id: ID!
  definitionId: ID!
  stringValue: String
  intValue: Int
  floatValue: Float
}
type ConfiguratorAssemblySlot {
  id: ID!
  definitionId: ID!
  item: ConfiguratorAssemblySlotItem
}
type ConfiguratorAssemblySlotItem {
  id: ID
}

input ConfiguratorAssemblyCreateInput {
  item: ConfiguratorAssemblyItemInput
}
input ConfiguratorAssemblyUpdateInput {
  item: ConfiguratorAssemblyItemInput
}
input ConfiguratorAssemblyItemInput {
  id: ID
  code: String
  name: String
  definitionId: ID!
  slots: [ConfiguratorAssemblySlotInput!]
  attributes: [ConfiguratorAssemblyAttributeInput!]
}
input ConfiguratorAssemblyAttributeInput {
  id: ID
  definitionId: ID!
  stringValue: String
  intValue: Int
  floatValue: Float
}
input ConfiguratorAssemblySlotInput {
  id: ID
  definitionId: ID!
  item: ConfiguratorAssemblySlotItemInput
}
input ConfiguratorAssemblySlotItemInput {
  id: ID
}

extend type Query {
  configuratorAssembly(id: ID!): ConfiguratorAssembly
}
extend type Mutation {
  createConfiguratorAssembly(
    input: ConfiguratorAssemblyCreateInput!
  ): ConfiguratorAssembly
  updateConfiguratorAssembly(
    id: ID!
    input: ConfiguratorAssemblyUpdateInput!
  ): ConfiguratorAssembly
}
